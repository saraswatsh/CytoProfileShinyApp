[{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Shubh Saraswat. Maintainer, author, copyright holder. Xiaohua Douglas Zhang. Author.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Saraswat S, Zhang X (2025). CytoProfileShinyApp: Comphrensive Cytokine Profiling Analysis Shiny Application. R package version 0.0.0.9000, https://saraswatsh.github.io/CytoProfileShinyApp/, https://ssa390.shinyapps.io/cytoprofile_shiny/, https://github.com/saraswatsh/CytoProfileShinyApp.","code":"@Manual{,   title = {CytoProfileShinyApp: Comphrensive Cytokine Profiling Analysis Shiny Application},   author = {Shubh Saraswat and Xiaohua Douglas Zhang},   year = {2025},   note = {R package version 0.0.0.9000, https://saraswatsh.github.io/CytoProfileShinyApp/, https://ssa390.shinyapps.io/cytoprofile_shiny/},   url = {https://github.com/saraswatsh/CytoProfileShinyApp}, }"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/index.html","id":"cytoprofile-shiny-application","dir":"","previous_headings":"","what":"Welcome to CytoProfile Shiny Application","title":"Welcome to CytoProfile Shiny Application","text":"goal CytoProfile Shiny conduct quality control using biological meaningful cutoff raw measured values cytokines. Specifically, test distributional symmetry suggest adopt transformation. Conduct exploratory analysis including summary statistics, generate enriched barplots, boxplots. , conduct univariate analysis multivariate analysis advance analysis. provides overall user-friendly experience users conduct analyses data. advanced users, CytoProfile R package available Github. Shiny application available CytoProfile Shiny App.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Welcome to CytoProfile Shiny Application","text":"Data Upload & Built-Data Options: Upload data files (CSV, TXT, Excel) choose built-datasets. Dynamic Column Selection & Filtering: Easily select columns apply filters based categorical variables focus analysis. Multiple Analysis Functions: ANOVA Boxplots Enhanced Boxplots Dual-Flashlight Plot Heatmap Principal Component Analysis (PCA) Random Forest Skewness/Kurtosis Sparse Partial Least Squares - Discriminant Analysis (sPLS-DA) Two-Sample T-Test Volcano Plot Extreme Gradient Boosting (XGBoost) Interactive & Downloadable Outputs: View results directly within app download outputs (e.g., PDF reports, images). Step--Step Wizard Navigation: guided process takes data upload, column selection, configuration analysis options, result display. Theme Toggle: Switch Light Dark themes suit visual preference. Inline Help & Tooltips: Detailed helper text accompanies input field assist configuration interpretation.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/index.html","id":"r-package-requirements","dir":"","previous_headings":"","what":"R Package Requirements","title":"Welcome to CytoProfile Shiny Application","text":"base64enc shiny shinyjs dplyr ggplot2 readxl bslib shinyhelper Install required packages using following code:","code":"install.packages(c(\"base64enc\", \"shiny\", \"shinyjs\", \"dplyr\", \"ggplot2\", \"readxl\", \"bslib\", \"shinyhelper\"))"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/index.html","id":"setup-and-installation","dir":"","previous_headings":"","what":"Setup and Installation","title":"Welcome to CytoProfile Shiny Application","text":"Clone repository GitHub: Clone repository download source code local machine. Open RStudio: Open project RStudio preffered IDE. Install Dependencies: Ensure packages installed. Run Application: Launch app executing","code":"shiny::runApp(\"app.R\")"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/index.html","id":"application-workflow","dir":"","previous_headings":"","what":"Application Workflow","title":"Welcome to CytoProfile Shiny Application","text":"app structured multi-step wizard:","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/index.html","id":"step-1-data-upload","dir":"","previous_headings":"Application Workflow","what":"Step 1: Data Upload","title":"Welcome to CytoProfile Shiny Application","text":"Excel files, choose desired sheet. Built-Data: Choose built-data sets.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/index.html","id":"step-2-column-selection-and-filtering","dir":"","previous_headings":"Application Workflow","what":"Step 2: Column Selection and Filtering","title":"Welcome to CytoProfile Shiny Application","text":"Column Selection: Choose columns analyze. Filter Data: Apply filters categorical variables.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/index.html","id":"step-3-analysis-options","dir":"","previous_headings":"Application Workflow","what":"Step 3: Analysis Options","title":"Welcome to CytoProfile Shiny Application","text":"Select Analysis Function: Choose variety analysis functions. Configure Options: Adjust parameters based selected analysis. Output Mode: Choose interactive results display downloadable reports.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/index.html","id":"step-4-analysis-results","dir":"","previous_headings":"Application Workflow","what":"Step 4: Analysis Results","title":"Welcome to CytoProfile Shiny Application","text":"Results Display: analysis results rendered dynamically. Depending selected function, results may include plots (2D/3D), tables, even downloadable reports. Download Option: download mode selected, output file (PDF) generated made available download re-running analysis.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Welcome to CytoProfile Shiny Application","text":"project licensed GPL (>= 2) License - see LICENSE file details.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Welcome to CytoProfile Shiny Application","text":"questions support, please contact package maintainer: Shubh Saraswat - Email","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData1.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Cytokine Profiling Data 1. — ExampleData1","title":"Example Cytokine Profiling Data 1. — ExampleData1","text":"Contains observed concentrations cytokines respective treatment groups, derived :","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Cytokine Profiling Data 1. — ExampleData1","text":"","code":"ExampleData1"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Cytokine Profiling Data 1. — ExampleData1","text":"data frame 297 rows 29 columns: Group Group assigned subjects. Treatment Treatment received subjects. Time Time point measurement. IL.17F Observed concentration IL.17F cytokine. GM.CSF Observed concentration GM.CSF cytokine. IFN.G Observed concentration IFN.G cytokine. IL.10 Observed concentration IL.10 cytokine. CCL.20.MIP.3A Observed concentration CCL.20.MIP.3A cytokine. IL.12.P70 Observed concentration IL.12.P70 cytokine. IL.13 Observed concentration IL.13 cytokine. IL.15 Observed concentration IL.15 cytokine. IL.17A Observed concentration IL.17A cytokine. IL.22 Observed concentration IL.22 cytokine. IL.9 Observed concentration IL.9 cytokine. IL.1B Observed concentration IL.1B cytokine. IL.33 Observed concentration IL.33 cytokine. IL.2 Observed concentration IL.2 cytokine. IL.21 Observed concentration IL.21 cytokine. IL.4 Observed concentration IL.4 cytokine. IL.23 Observed concentration IL.23 cytokine. IL.5 Observed concentration IL.5 cytokine. IL.6 Observed concentration IL.6 cytokine. IL.17E.IL.25 Observed concentration IL.17E.IL.25 cytokine. IL.27 Observed concentration IL.27 cytokine. IL.31 Observed concentration IL.31 cytokine. TNF.Observed concentration TNF.cytokine. TNF.B Observed concentration TNF.B cytokine. IL.28A Observed concentration IL.28A cytokine.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Cytokine Profiling Data 1. — ExampleData1","text":"Example data compiled cytokine profiling.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example Cytokine Profiling Data 1. — ExampleData1","text":"Pugh GH, Fouladvand S, SantaCruz-Calvo S, Agrawal M, Zhang XD, Chen J, Kern PA, Nikolajczyk BS. T cells dominate peripheral inflammation cross-sectional analysis obesity-associated diabetes. Obesity (Silver Spring). 2022;30(10): 1983–1994. doi:10.1002/oby.23528.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example Cytokine Profiling Data 1. — ExampleData1","text":"","code":"data(ExampleData1)"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData2.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Cytokine Profiling Data 2. — ExampleData2","title":"Example Cytokine Profiling Data 2. — ExampleData2","text":"Contains observed concentrations cytokines respective treatment groups, derived :","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Cytokine Profiling Data 2. — ExampleData2","text":"","code":"ExampleData2"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Cytokine Profiling Data 2. — ExampleData2","text":"data frame 66 rows 20 columns: Stimulation Stimulation assigned subjects. Group Group assigned subjects. IL.17F Observed concentration IL.17F cytokine. GM.CSF Observed concentration GM.CSF cytokine. IFN.G Observed concentration IFN.G cytokine. IL.10 Observed concentration IL.10 cytokine. CCL.20 Observed concentration CCL.20 cytokine. IL.12 Observed concentration IL.12 cytokine. IL.13 Observed concentration IL.13 cytokine. IL.17A Observed concentration IL.17A cytokine. IL.22 Observed concentration IL.22 cytokine. IL.9 Observed concentration IL.9 cytokine. IL.1B Observed concentration IL.1B cytokine. IL.2 Observed concentration IL.2 cytokine. IL.21 Observed concentration IL.21 cytokine. IL.4 Observed concentration IL.4 cytokine. IL.5 Observed concentration IL.5 cytokine. IL.6 Observed concentration IL.6 cytokine. TNF.Observed concentration TNF.cytokine. TNF.B Observed concentration TNF.B cytokine.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Cytokine Profiling Data 2. — ExampleData2","text":"Example data compiled cytokine profiling.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example Cytokine Profiling Data 2. — ExampleData2","text":"SantaCruz-Calvo S, Saraswat S, Hasturk H, Dawson DR, Zhang XD, Nikolajczyk BS. Periodontitis Diabetes Differentially Affect Inflammation Obesity. J Dent Res. 2024;103(12):1313-1322. doi:10.1177/00220345241280743","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example Cytokine Profiling Data 2. — ExampleData2","text":"","code":"data(ExampleData2)"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData3.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Cytokine Profiling Data 3. — ExampleData3","title":"Example Cytokine Profiling Data 3. — ExampleData3","text":"Contains observed concentrations cytokines respective treatment groups, derived :","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Cytokine Profiling Data 3. — ExampleData3","text":"","code":"ExampleData3"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Cytokine Profiling Data 3. — ExampleData3","text":"data frame 64 rows 14 columns: Stimulation Stimulation assigned subjects. Group Group assigned subjects. GM.CSF Observed concentration GM.CSF cytokine. IFN.G Observed concentration IFN.G cytokine. IL.10 Observed concentration IL.10 cytokine. CCL.20.MIP.3A Observed concentration CCL.20.MIP.3A cytokine. IL.12.P70 Observed concentration IL.12.P70 cytokine. IL.13 Observed concentration IL.13 cytokine. IL.15 Observed concentration IL.15 cytokine. IL.9 Observed concentration IL.9 cytokine. IL.1B Observed concentration IL.1B cytokine. IL.21 Observed concentration IL.21 cytokine. IL.6 Observed concentration IL.6 cytokine. TNF.Observed concentration TNF.cytokine.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Cytokine Profiling Data 3. — ExampleData3","text":"Example data compiled cytokine profiling.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData3.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example Cytokine Profiling Data 3. — ExampleData3","text":"SantaCruz-Calvo S, Saraswat S, Hasturk H, Dawson DR, Zhang XD, Nikolajczyk BS. Periodontitis Diabetes Differentially Affect Inflammation Obesity. J Dent Res. 2024;103(12):1313-1322. doi:10.1177/00220345241280743","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example Cytokine Profiling Data 3. — ExampleData3","text":"","code":"data(ExampleData3)"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData4.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Cytokine Profiling Data 4. — ExampleData4","title":"Example Cytokine Profiling Data 4. — ExampleData4","text":"Contains observed concentrations cytokines respective treatment groups, derived :","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Cytokine Profiling Data 4. — ExampleData4","text":"","code":"ExampleData4"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Cytokine Profiling Data 4. — ExampleData4","text":"data frame 64 rows 14 columns: Group Group assigned subjects. Treatment Treatment received subjects. IL.17F Observed concentration IL.17F cytokine. GM.CSF Observed concentration GM.CSF cytokine. IFNg Observed concentration IFNg cytokine. IL.10 Observed concentration IL.10 cytokine. CCL.20 Observed concentration CCL.20 cytokine. IL.12 Observed concentration IL.12 cytokine. IL.13 Observed concentration IL.13 cytokine. IL.17A Observed concentration IL.17A cytokine. IL.22 Observed concentration IL.22 cytokine. IL.9 Observed concentration IL.9 cytokine. IL.2 Observed concentration IL.2 cytokine. IL.21 Observed concentration IL.21 cytokine. IL.4 Observed concentration IL.4 cytokine. IL.23 Observed concentration IL.23 cytokine. IL.5 Observed concentration IL.5 cytokine. IL.6 Observed concentration IL.6 cytokine. TNFa Observed concentration TNFa cytokine. TNFb Observed concentration TNFb cytokine.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData4.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Cytokine Profiling Data 4. — ExampleData4","text":"Example data compiled cytokine profiling.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData4.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example Cytokine Profiling Data 4. — ExampleData4","text":"SantaCruz-Calvo, S., Saraswat, S., Kalantar, G. H., Zukowski, E., Marszalkowski, H., Javidan, ., Gholamrezaeinejad, F., Bharath, L. P., Kern, P. ., Zhang, X. D., & Nikolajczyk, B. S. (2024). unique inflammaging profile generated T cells people obesity metformin resistant. GeroScience, 10.1007/s11357-024-01441-4. Advance online publication. https://doi.org/10.1007/s11357-024-01441-4","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/ExampleData4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example Cytokine Profiling Data 4. — ExampleData4","text":"","code":"data(ExampleData4)"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_anova.html","id":null,"dir":"Reference","previous_headings":"","what":"ANOVA Analysis on Continuous Variables. — cyt_anova","title":"ANOVA Analysis on Continuous Variables. — cyt_anova","text":"function performs analysis variance (ANOVA) continuous variable every categorical predictor input data. Character columns automatically converted factors; factor columns used predictors numeric columns used continuous outcomes. valid predictor (.e., one level 10 levels), Tukey's Honest Significant Difference (HSD) test conducted adjusted p-values pairwise comparisons extracted.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_anova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ANOVA Analysis on Continuous Variables. — cyt_anova","text":"","code":"cyt_anova(data, format_output = FALSE, progress = NULL)"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_anova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ANOVA Analysis on Continuous Variables. — cyt_anova","text":"data data frame matrix containing categorical continuous variables. Character columns converted factors used predictors, numeric columns used continuous outcomes. format_output Logical. TRUE, returns results tidy data frame instead list. Default FALSE.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_anova.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ANOVA Analysis on Continuous Variables. — cyt_anova","text":"format_output FALSE (default), list adjusted p-values Tukey's HSD tests combination continuous outcome categorical predictor. format_output TRUE, data frame columns \"Outcome\", \"Categorical\", \"Comparison\", \"P_adj\".","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_anova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ANOVA Analysis on Continuous Variables. — cyt_anova","text":"","code":"data(\"cytodata\") #> Warning: data set ‘cytodata’ not found # Return list output (default) anova_results <- cyt_anova(ExampleData1[, c(2:4, 5:6)]) print(anova_results) #> $Time_Treatment #>          LPS-CD3/CD28 Unstimulated-CD3/CD28      Unstimulated-LPS  #>                     1                     1                     1  #>  #> $IL.17F_Treatment #>          LPS-CD3/CD28 Unstimulated-CD3/CD28      Unstimulated-LPS  #>          7.229772e-13          7.214229e-13          9.990797e-01  #>  #> $GM.CSF_Treatment #>          LPS-CD3/CD28 Unstimulated-CD3/CD28      Unstimulated-LPS  #>          7.183143e-13          6.974421e-13          3.481621e-01  #>  #> $IFN.G_Treatment #>          LPS-CD3/CD28 Unstimulated-CD3/CD28      Unstimulated-LPS  #>          7.445156e-13          7.394085e-13          9.987624e-01  #>   # Return formatted output as a data frame anova_df <- cyt_anova(ExampleData1[, c(2:4, 5:6)], format_output = TRUE) head(anova_df) #>                        Outcome Categorical            Comparison        P_adj #> LPS-CD3/CD28              Time   Treatment          LPS-CD3/CD28 1.000000e+00 #> Unstimulated-CD3/CD28     Time   Treatment Unstimulated-CD3/CD28 1.000000e+00 #> Unstimulated-LPS          Time   Treatment      Unstimulated-LPS 1.000000e+00 #> LPS-CD3/CD281           IL.17F   Treatment          LPS-CD3/CD28 7.229772e-13 #> Unstimulated-CD3/CD281  IL.17F   Treatment Unstimulated-CD3/CD28 7.214229e-13 #> Unstimulated-LPS1       IL.17F   Treatment      Unstimulated-LPS 9.990797e-01"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_bp.html","id":null,"dir":"Reference","previous_headings":"","what":"Boxplots for Overall Comparisons by Continuous Variables. — cyt_bp","title":"Boxplots for Overall Comparisons by Continuous Variables. — cyt_bp","text":"function creates boxplots continuous variables provided data. number columns data exceeds bin_size, plots split across multiple chunks. output_file provided, function writes plots PDF file; otherwise, returns list ggplot objects.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_bp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boxplots for Overall Comparisons by Continuous Variables. — cyt_bp","text":"","code":"cyt_bp(   data,   output_file = NULL,   bin_size = 25,   mf_row = c(1, 1),   y_lim = NULL,   scale = NULL,   progress = NULL )"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_bp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boxplots for Overall Comparisons by Continuous Variables. — cyt_bp","text":"data matrix data frame containing raw data plotted. output_file Optional. file path save plots PDF file. NULL, function returns list ggplot objects. bin_size integer specifying maximum number box plots display per chunk. mf_row numeric vector length two specifying layout (rows columns) PDF output. (used returning ggplot objects.) y_lim optional numeric vector defining y-axis limits plots. scale optional character string. set \"log2\", numeric columns log2-transformed.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_bp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boxplots for Overall Comparisons by Continuous Variables. — cyt_bp","text":"output_file NULL, list ggplot objects; otherwise, writes PDF returns NULL.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_bp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boxplots for Overall Comparisons by Continuous Variables. — cyt_bp","text":"","code":"data.df <- cytodata #> Error: object 'cytodata' not found # To display the boxplots natively: plots <- cyt_bp(data.df, bin_size = 10, scale = \"log2\") #> Error: object 'data.df' not found print(plots[[1]]) #> Error: object 'plots' not found  # To save the boxplots to a PDF file: cyt_bp(data.df, output_file = \"boxplot_output.pdf\", scale = \"log2\") #> Error: object 'data.df' not found"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_bp2.html","id":null,"dir":"Reference","previous_headings":"","what":"Boxplot Function Enhanced for Specific Group Comparisons. — cyt_bp2","title":"Boxplot Function Enhanced for Specific Group Comparisons. — cyt_bp2","text":"function generates boxplots combination numeric factor variables provided data. Character columns converted factors function checks data contains least one numeric one factor column. scale argument set \"log2\", numeric columns log2-transformed. function creates boxplots using ggplot2 numeric variable grouped factor variable. output_file provided, plots saved PDF file; otherwise, list ggplot objects returned.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_bp2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boxplot Function Enhanced for Specific Group Comparisons. — cyt_bp2","text":"","code":"cyt_bp2(   data,   output_file = NULL,   mf_row = c(1, 1),   scale = NULL,   y_lim = NULL,   progress = NULL )"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_bp2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boxplot Function Enhanced for Specific Group Comparisons. — cyt_bp2","text":"data matrix data frame raw data. output_file Optional. string representing file path PDF file created. NULL (default), function returns list ggplot objects. mf_row numeric vector length two specifying layout (rows columns) plots PDF output. Defaults c(1, 1). (Ignored returning ggplot objects.) scale Transformation option continuous variables. Options NULL (default) \"log2\". set \"log2\", numeric columns transformed using log2 function. y_lim optional numeric vector defining y-axis limits plots.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_bp2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boxplot Function Enhanced for Specific Group Comparisons. — cyt_bp2","text":"output_file NULL, returns list ggplot objects (named \"num_vs_factor\" combination). output_file provided, PDF file created function returns NULL invisibly.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_bp2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boxplot Function Enhanced for Specific Group Comparisons. — cyt_bp2","text":"","code":"# Loading data data_df <- cytodata[, -c(1, 4)] #> Error: object 'cytodata' not found  # To display the boxplots interactively: plots <- cyt_bp2(data_df, scale = \"log2\") #> Error: object 'data_df' not found print(plots[[\"IL6_vs_Group\"]]) #> Error: object 'plots' not found  # To save the boxplots to a PDF file: cyt_bp2(data_df, output_file = \"boxplot2_output.pdf\", scale = \"log2\") #> Error: object 'data_df' not found"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_dualflashplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Dual-flashlight Plot. — cyt_dualflashplot","title":"Dual-flashlight Plot. — cyt_dualflashplot","text":"function reshapes input data computes summary statistics (mean variance) variable grouped specified grouping column. calculates SSMD (Strictly Standardized Mean Difference) log2 fold change two groups (group1 group2) categorizes effect strength. dual flash plot generated using ggplot2 x-axis represents average log2 fold change y-axis represents SSMD.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_dualflashplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dual-flashlight Plot. — cyt_dualflashplot","text":"","code":"cyt_dualflashplot(   data,   group_var,   group1,   group2,   ssmd_thresh = 1,   log2fc_thresh = 1,   top_labels = 15,   output_file = NULL,   progress = NULL )"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_dualflashplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dual-flashlight Plot. — cyt_dualflashplot","text":"data data frame containing input data. group_var string specifying name grouping column data. group1 string representing name first group comparison. group2 string representing name second group comparison. ssmd_thresh numeric threshold SSMD value used determine significance (default = 1). log2fc_thresh numeric threshold log2 fold change used determine significance (default = 1). top_labels integer specifying number top variables (based absolute SSMD) label plot (default = 15). output_file Optional. file path save plot PDF (PNG extension .png). NULL (default), function returns ggplot object.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_dualflashplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dual-flashlight Plot. — cyt_dualflashplot","text":"output_file NULL, ggplot object representing dual-flash plot returned; otherwise, plot saved specified file function returns NULL invisibly.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_dualflashplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dual-flashlight Plot. — cyt_dualflashplot","text":"","code":"if (FALSE) { # \\dontrun{ # Interactive mode: p <- cyt_dualflashplot(cytodata, group_var = \"Group\", group1 = \"T2D\", group2 = \"ND\",                         ssmd_thresh = 1, log2fc_thresh = 1, top_labels = 15) print(p)  # Download mode: cyt_dualflashplot(cytodata, group_var = \"Group\", group1 = \"T2D\", group2 = \"ND\",                    ssmd_thresh = 1, log2fc_thresh = 1, top_labels = 15,                    output_file = \"dualflashplot.pdf\") } # }"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Heat Map. — cyt_heatmap","title":"Heat Map. — cyt_heatmap","text":"Heat Map.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heat Map. — cyt_heatmap","text":"","code":"cyt_heatmap(   data,   scale = NULL,   annotation_col_name = NULL,   output_file = NULL,   progress = NULL )"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heat Map. — cyt_heatmap","text":"data data frame containing input data. numeric columns used. scale Character. optional scaling option. set \"log2\", numeric data log2-transformed (non-positive values set NA). Default NULL. annotation_col_name Character. Optional column name data used annotation colors. output_file Optional. file path save plot. NULL, function creates temporary PNG file returns path.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heat Map. — cyt_heatmap","text":"output_file NULL, returns character string file path PNG. Otherwise, writes plot returns NULL invisibly.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heat Map. — cyt_heatmap","text":"","code":"if (FALSE) { # \\dontrun{ # Interactive mode: temp_file <- cyt_heatmap(cytodata[, -c(1,3,4)], scale = \"log2\", annotation_col_name = \"Group\", output_file = NULL) # temp_file will contain the path to the generated PNG.  # Download mode: cyt_heatmap(cytodata[, -c(1,3,4)], scale = \"log2\", annotation_col_name = \"Group\", output_file = \"myheatmap.pdf\") } # }"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Data with Principal Component Analysis (PCA) for Cytokines. — cyt_pca","title":"Analyze Data with Principal Component Analysis (PCA) for Cytokines. — cyt_pca","text":"function performs PCA cytokine data generates several types plots: 2D individuals plot, optionally 3D scatter plot (style \"3d\" comp_num 3), scree plot, loadings plots component, biplot (using default stats::biplot), correlation circle plot.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Data with Principal Component Analysis (PCA) for Cytokines. — cyt_pca","text":"","code":"cyt_pca(   data,   group_col = NULL,   group_col2 = NULL,   colors = NULL,   pdf_title = NULL,   ellipse = FALSE,   comp_num = 2,   scale = NULL,   pch_values = NULL,   style = NULL,   output_file = NULL,   pca_colors = NULL,   progress = NULL )"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Data with Principal Component Analysis (PCA) for Cytokines. — cyt_pca","text":"data data frame containing cytokine data. group_col Character. name column containing grouping information. group_col2 Character. name second column containing grouping information. one missing, provided column used . colors vector colors corresponding groups. NULL, palette generated. pdf_title Optional. file name PDF output. NULL, interactive mode assumed. ellipse Logical. TRUE, 95% confidence ellipse drawn individuals plot. comp_num Numeric. Number principal components compute display. Default 2. scale Character. \"log2\", log2 transformation applied (excluding factor columns). pch_values vector plotting symbols. style Character. \"3d\" (case insensitive) comp_num equals 3, 3D scatter plot generated. output_file Optional. file name output (PDF mode); provided, overrides pdf_title. progress Optional. progress object (e.g., shiny::Progress) report progress.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Data with Principal Component Analysis (PCA) for Cytokines. — cyt_pca","text":"PDF mode, PDF created function returns NULL (invisibly). interactive mode, (possibly nested) list recorded plots returned.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_pca.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze Data with Principal Component Analysis (PCA) for Cytokines. — cyt_pca","text":"PDF mode (pdf_title output_file provided) plots printed PDF. interactive mode (pdf_title output_file NULL) plots captured using recordPlot() returned list display Shiny.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_rf.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Random Forest Classification on Cytokine Data. — cyt_rf","title":"Run Random Forest Classification on Cytokine Data. — cyt_rf","text":"function trains evaluates Random Forest classification model cytokine data. includes variable importance visualization, cross-validation feature selection, performance metrics accuracy, sensitivity, specificity. binary classification, function can also plot ROC curve compute AUC.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_rf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Random Forest Classification on Cytokine Data. — cyt_rf","text":"","code":"cyt_rf(   data,   group_col,   ntree = 500,   mtry = 5,   train_fraction = 0.7,   plot_roc = FALSE,   k_folds = 5,   step = 0.5,   run_rfcv = TRUE,   output_file = NULL,   progress = NULL )"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_rf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Random Forest Classification on Cytokine Data. — cyt_rf","text":"data data frame containing cytokine data, one column grouping variable (target variable) rest numerical features. group_col string representing name column grouping variable. ntree integer specifying number trees grow forest (default 500). mtry integer specifying number variables randomly selected split (default 5). train_fraction numeric value 0 1 representing proportion data use training (default 0.7). plot_roc logical value indicating whether plot ROC curve compute AUC binary classification (default FALSE). k_folds integer specifying number folds cross-validation (default 5). step numeric value specifying fraction variables remove step cross-validation feature selection (default 0.5). run_rfcv logical value indicating whether run Random Forest cross-validation feature selection (default TRUE). output_file Optional. file path save outputs (plots summaries) PDF file. NULL (default), function returns list objects interactive display.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_rf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Random Forest Classification on Cytokine Data. — cyt_rf","text":"list containing: model: trained Random Forest model, train_confusion: confusion matrix training set, accuracy_train: overall training set accuracy, test_confusion: confusion matrix test set, accuracy_test: overall test set accuracy, vip_plot: ggplot object variable importance, importance_data: data frame variable importance metrics, roc_plot: (applicable) ggplot object ROC curve, rfcv_result: (run_rfcv TRUE) cross-validation results, rfcv_data: (run_rfcv TRUE) data frame RF CV results, rfcv_plot: (run_rfcv TRUE) ggplot object RF CV error vs. number variables. output_file provided, PDF generated function returns NULL invisibly.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_rf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Random Forest Classification on Cytokine Data. — cyt_rf","text":"","code":"data.df0 <- cytodata #> Error: object 'cytodata' not found data.df <- data.frame(data.df0[, 1:4], log2(data.df0[, -c(1:4)])) #> Error: object 'data.df0' not found data.df <- data.df[, -c(1, 3, 4)] #> Error: object 'data.df' not found data.df <- dplyr::filter(data.df, Group != \"ND\") #> Error: object 'data.df' not found  # For interactive use: results <- cyt_rf(data = data.df, group_col = \"Group\", k_folds = 5,                   ntree = 1000, mtry = 4, run_rfcv = TRUE, plot_roc = TRUE) #> Error: object 'data.df' not found print(results$vip_plot) #> Error: object 'results' not found  # To save outputs to a PDF: cyt_rf(data = data.df, group_col = \"Group\", k_folds = 5,        ntree = 1000, mtry = 4, run_rfcv = TRUE, plot_roc = TRUE,        output_file = \"RF_Analysis.pdf\") #> Error: object 'data.df' not found"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_skku.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribution of the Data Set Shown by Skewness and Kurtosis (Revised). — cyt_skku","title":"Distribution of the Data Set Shown by Skewness and Kurtosis (Revised). — cyt_skku","text":"function computes summary statistics (sample size, mean, standard error, skewness, kurtosis) numeric measurement column data set, optionally grouped columns group_cols. produces overlayed histograms skewness kurtosis raw log2-transformed data. output_file provided, two plots arranged side side single PDF page; otherwise, list two ggplot objects returned.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_skku.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribution of the Data Set Shown by Skewness and Kurtosis (Revised). — cyt_skku","text":"","code":"cyt_skku(   data,   group_cols = NULL,   output_file = NULL,   print_res_raw = FALSE,   print_res_log = FALSE,   progress = NULL )"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_skku.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribution of the Data Set Shown by Skewness and Kurtosis (Revised). — cyt_skku","text":"data data frame matrix raw data. group_cols character vector specifying names grouping columns. provided, entire dataset treated one group (\"overall\"). output_file Optional. file path save plots (extension .pdf). NULL (default), function returns list two ggplot objects. print_res_raw Logical. TRUE, prints returns summary statistics raw data. print_res_log Logical. TRUE, prints returns summary statistics log2 data.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_skku.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distribution of the Data Set Shown by Skewness and Kurtosis (Revised). — cyt_skku","text":"output_file NULL, returns list : p_skew: Overlayed histogram raw log2 skewness. p_kurt: Overlayed histogram raw log2 kurtosis. Otherwise, writes plots PDF returns NULL invisibly.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_splsda.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze data with Sparse Partial Least Squares Discriminant Analysis (sPLS-DA). — cyt_splsda","title":"Analyze data with Sparse Partial Least Squares Discriminant Analysis (sPLS-DA). — cyt_splsda","text":"Analyze data Sparse Partial Least Squares Discriminant Analysis (sPLS-DA).","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_splsda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze data with Sparse Partial Least Squares Discriminant Analysis (sPLS-DA). — cyt_splsda","text":"","code":"cyt_splsda(   data,   group_col = NULL,   group_col2 = NULL,   colors = NULL,   pdf_title,   ellipse = FALSE,   bg = FALSE,   conf_mat = FALSE,   var_num,   cv_opt = NULL,   fold_num = 5,   scale = NULL,   comp_num = 2,   pch_values,   style = NULL,   roc = FALSE,   splsda_colors = NULL,   progress = NULL )"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_splsda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze data with Sparse Partial Least Squares Discriminant Analysis (sPLS-DA). — cyt_splsda","text":"data matrix data frame containing variables. Columns specified group_col group_col2 assumed continuous variables analysis. group_col string specifying first grouping column name contains grouping information. group_col2 provided, used grouping treatment. group_col2 string specifying second grouping column name. Default NULL. colors vector colors groups treatments. NULL, random palette (using rainbow) generated based number groups. pdf_title string specifying file name saving PDF output. set NULL, function runs interactive mode. ellipse Logical. Whether draw 95\\ Default FALSE. bg Logical. Whether draw prediction background figures. Default FALSE. conf_mat Logical. Whether print confusion matrix classifications. Default FALSE. var_num Numeric. number variables used PLS-DA model. cv_opt Character. Option cross-validation method: either \"loocv\" \"Mfold\". Default NULL. fold_num Numeric. number folds use cv_opt \"Mfold\". Default 5. scale Character. Option data transformation; set \"log2\", log2 transformation applied continuous variables. Default NULL. comp_num Numeric. number components calculate sPLS-DA model. Default 2. pch_values vector integers specifying plotting characters (pch values) used plots. style Character. set \"3D\" \"3d\" comp_num equals 3, 3D plot generated using plot3D package. Default NULL. roc Logical. Whether compute plot ROC curve model. Default FALSE.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_splsda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze data with Sparse Partial Least Squares Discriminant Analysis (sPLS-DA). — cyt_splsda","text":"Download mode (pdf_title NULL), PDF file written function returns NULL invisibly. Interactive mode (pdf_title = NULL), named list returned following elements (order): 1. overall_indiv_plot: Main individual classification plot 2. overall_3D: Main 3D plot (generated) 3. overall_ROC: ROC curve plot overall model 4. overall_CV: Cross-validation error plot overall model 5. loadings: list loadings plots (one per component) 6. vip_scores: list VIP score bar plots component 7. vip_indiv_plot: Main individual plot VIP>1 model 8. vip_3D: 3D plot VIP>1 model (generated) 9. vip_ROC: ROC curve plot VIP>1 model 10. vip_CV: Cross-validation error plot VIP>1 model 11. conf_matrix: Confusion matrix text output","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_splsda.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze data with Sparse Partial Least Squares Discriminant Analysis (sPLS-DA). — cyt_splsda","text":"","code":"data.df <- cytodata #> Error: object 'cytodata' not found cyt_splsda(data.df[,-c(1,4)], pdf_title = \"Example sPLS-DA Analysis.pdf\",            colors = c(\"black\", \"purple\", \"red2\"), bg = TRUE, scale = \"log2\",            conf_mat = TRUE, var_num = 25, cv_opt = \"loocv\", comp_num = 3,            pch_values = c(16, 4, 3), style = \"3d\",            group_col = \"Group\", group_col2 = \"Treatment\", roc = TRUE) #> Error in withProgress(message = paste(\"Starting Preliminary Processing\"),     value = 0, {        if (!is.null(group_col) && is.null(group_col2)) {            incProgress(0, detail = \"No second grouping column provided; performing overall analysis.\")            group_col2 <- group_col        }        if (is.null(group_col) && !is.null(group_col2)) {            stop(\"No first grouping column provided; must provide the first grouping column.\")        }        if (is.null(group_col) && is.null(group_col2)) {            stop(\"At least one grouping column must be provided.\")        }        if (!is.null(scale) && scale == \"log2\") {            data <- data.frame(data[, c(group_col, group_col2),                 drop = FALSE], log2(data[, !(names(data) %in%                 c(group_col, group_col2)), drop = FALSE]))            incProgress(0, detail = \"Results based on log2 transformation:\")        }        else {            incProgress(0, detail = \"Results based on no transformation:\")        }    }): could not find function \"withProgress\""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Two Sample T-test Comparisons. — cyt_ttest","title":"Two Sample T-test Comparisons. — cyt_ttest","text":"function performs pairwise comparisons two groups combination categorical predictor (exactly two levels) continuous outcome variable. first converts character variables data factors , specified, applies log2 transformation continuous variables. Depending value scale, function conducts either two-sample t-test (scale = \"log2\") Mann-Whitney U test (scale NULL). resulting p-values printed returned.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two Sample T-test Comparisons. — cyt_ttest","text":"","code":"cyt_ttest(data, scale = NULL, format_output = FALSE, progress = NULL)"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two Sample T-test Comparisons. — cyt_ttest","text":"data matrix data frame containing continuous categorical variables. scale character specifying transformation continuous variables. Options NULL (default) \"log2\". scale = \"log2\", log2 transformation applied two-sample t-test used; scale NULL, Mann-Whitney U test performed. format_output Logical. TRUE, returns results tidy data frame. Default FALSE.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two Sample T-test Comparisons. — cyt_ttest","text":"format_output FALSE, returns list p-values (named Outcome Categorical variable). TRUE, returns data frame columns \"Outcome\", \"Categorical\", \"Comparison\", \"P_value\".","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two Sample T-test Comparisons. — cyt_ttest","text":"","code":"if (FALSE) { # \\dontrun{ data_df <- cytodata[, -c(1, 4)] data_df <- dplyr::filter(data_df, Group != \"ND\", Treatment != \"Unstimulated\") # Two-sample t-test (log2 transformation) res <- cyt_ttest(data_df[, c(1,2,5:6)], scale = \"log2\", format_output = TRUE) head(res)  # Mann-Whitney U test (no transformation) res2 <- cyt_ttest(data_df[, c(1,2,5:6)], format_output = TRUE) head(res2) } # }"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_volc.html","id":null,"dir":"Reference","previous_headings":"","what":"Volcano Plot. — cyt_volc","title":"Volcano Plot. — cyt_volc","text":"function subsets numeric columns input data compares based selected grouping column. computes fold changes (ratio means) associated p-values (using two-sample t-tests) numeric variable two groups. results log2-transformed (fold change) -log10-transformed (p-values) generate volcano plots.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_volc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Volcano Plot. — cyt_volc","text":"","code":"cyt_volc(   data,   group_col,   cond1 = NULL,   cond2 = NULL,   fold_change_thresh = 2,   p_value_thresh = 0.05,   top_labels = 10,   output_file = NULL,   progress = NULL )"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_volc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Volcano Plot. — cyt_volc","text":"data matrix data frame containing data analyzed. group_col character string specifying column name used comparisons. cond1 character string specifying name first condition comparison. empty, pairwise comparisons generated. cond2 character string specifying name second condition comparison. empty, pairwise comparisons generated. fold_change_thresh numeric threshold fold change. Default 2. p_value_thresh numeric threshold p-value. Default 0.05. top_labels integer specifying number top variables label plot. Default 10. output_file Optional. file path save plot. NULL (default), function returns list ggplot objects.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_volc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Volcano Plot. — cyt_volc","text":"output_file NULL, list ggplot objects (one per pair) returned. output_file provided, plot(s) written file function returns NULL invisibly.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_volc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Volcano Plot. — cyt_volc","text":"cond1 cond2 provided (non-empty), pair compared. Otherwise, function automatically generates possible pairwise comparisons.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_xgb.html","id":null,"dir":"Reference","previous_headings":"","what":"Run XGBoost Classification on Cytokine Data. — cyt_xgb","title":"Run XGBoost Classification on Cytokine Data. — cyt_xgb","text":"function trains evaluates XGBoost classification model cytokine data. allows hyperparameter tuning, cross-validation, visualizes feature importance.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_xgb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run XGBoost Classification on Cytokine Data. — cyt_xgb","text":"","code":"cyt_xgb(   data,   group_col,   train_fraction = 0.7,   nrounds = 500,   max_depth = 6,   eta = 0.1,   nfold = 5,   cv = FALSE,   objective = \"multi:softprob\",   early_stopping_rounds = NULL,   eval_metric = \"mlogloss\",   gamma = 0,   colsample_bytree = 1,   subsample = 1,   min_child_weight = 1,   top_n_features = 10,   plot_roc = FALSE,   output_file = NULL,   progress = NULL )"},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_xgb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run XGBoost Classification on Cytokine Data. — cyt_xgb","text":"data data frame containing cytokine data, one column grouping variable rest numerical features. group_col string representing name column grouping variable (.e., target variable classification). train_fraction numeric value 0 1 representing proportion data use training (default 0.7). nrounds integer specifying number boosting rounds (default 500). max_depth integer specifying maximum depth trees (default 6). eta numeric value representing learning rate (default 0.1). nfold integer specifying number folds cross-validation (default 5). cv logical value indicating whether perform cross-validation (default FALSE). objective string specifying XGBoost objective function (default \"multi:softprob\" multi-class classification). early_stopping_rounds integer specifying number rounds improvement stop training early (default NULL). eval_metric string specifying evaluation metric (default \"mlogloss\"). gamma numeric value minimum loss reduction required make partition (default 0). colsample_bytree numeric value specifying subsample ratio columns constructing tree (default 1). subsample numeric value specifying subsample ratio training instances (default 1). min_child_weight numeric value specifying minimum sum instance weight needed child (default 1). top_n_features integer specifying number top features display importance plot (default 10). plot_roc logical value indicating whether plot ROC curve calculate AUC binary classification (default FALSE). output_file Optional. file path save outputs PDF file. provided, outputs written file results returned invisibly. verbose integer specifying verbosity training process (default 1).","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_xgb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run XGBoost Classification on Cytokine Data. — cyt_xgb","text":"list containing: summary_text character string summarizing key results (interactive mode ). model trained XGBoost model. confusion_matrix confusion matrix (test set). importance feature importance data top features. class_mapping named vector showing mapping class labels numeric values used training. cv_results Cross-validation results performed (otherwise NULL). plot ggplot object showing feature importance plot.","code":""},{"path":"https://saraswatsh.github.io/CytoProfileShinyApp/reference/cyt_xgb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run XGBoost Classification on Cytokine Data. — cyt_xgb","text":"","code":"data_df0 <- cytodata #> Error: object 'cytodata' not found data_df <- data.frame(data_df0[, 1:4], log2(data_df0[, -c(1:4)])) #> Error: object 'data_df0' not found data_df <- data_df[, -c(1, 3, 4)] #> Error: object 'data_df' not found data_df <- dplyr::filter(data_df, Group != \"ND\") #> Error: object 'data_df' not found  # Interactive mode: results <- cyt_xgb(   data = data_df, group_col = \"Group\", nrounds = 500, max_depth = 4, eta = 0.05,   nfold = 5, cv = TRUE, eval_metric = \"mlogloss\",   early_stopping_rounds = NULL, top_n_features = 10, plot_roc = TRUE ) #> Error: object 'data_df' not found print(results$plot) #> Error: object 'results' not found  # To save outputs to a PDF file: cyt_xgb(   data = data_df, group_col = \"Group\", nrounds = 500, max_depth = 4, eta = 0.05,   nfold = 5, cv = TRUE, eval_metric = \"mlogloss\",   early_stopping_rounds = NULL, top_n_features = 10, plot_roc = TRUE,   output_file = \"XGB_Analysis.pdf\" ) #> Error: object 'data_df' not found"}]
